{"version":3,"sources":["Project1-GitUtil-Reimbursement/Types/Enums.ts","components/wrappers/wProviderWrapper.tsx","Project1-GitUtil-Reimbursement/Classes/HTTPRequestHandler.ts","BasicComponents/StyleSheet.tsx","BasicComponents/BasicComponent.tsx","components/element/eNavigationBar.tsx","components/panels/homepage/pUserProfile.tsx","Project1-GitUtil-Reimbursement/Classes/DataProcessor.ts","components/element/eRequestSelectButton.tsx","components/panels/homepage/pRequestView.tsx","components/panels/homepage/pRequestCreation.tsx","components/panels/homepage/pDisplayRecords.tsx","components/adminTools/AdminNavBar.tsx","components/adminTools/allprofiles/singleProfilebutton.tsx","components/adminTools/allprofiles/AllProfileView.tsx","components/adminTools/AdminPage.tsx","components/page/HomePage.tsx","components/page/NoConnectionScreen.tsx","components/panels/signin/pCreateProfileScreen.tsx","components/panels/signin/pLoginScreen.tsx","components/wrappers/wSigninSwitcher.tsx","components/wrappers/wConnectionSwitcher.tsx","App.tsx"],"names":["RequestStatus","HTTPCommands","HTTPRequestErrorFlag","SysReducerAction","HTTPRequestHandler","InputURL","InputPortNumber","AuthenticationString","UserID","this","PortNumber","length","TargetURL","Authentication","Error","Command","ID","CreateProfile","Login","LogOut","ChangeFirstName","ChangeLastName","ChangePassword","GetManageName","MakeRequest","DeleteRequest","GetAllSentRequest","ManageChangeRequest","ManagerGetAllRequest","AdminCreateProfile","AdminGetAllEmployees","AdminAssignManager","AdminRemoveEmployee","AdminDeleteProfile","GetRecords","CheckAdminPermissions","CheckManagerPermissions","constructURLPrefect","GetRoute","body","Axios","post","CreateURL","patch","get","delete","a","async","status","password","CreateHTTPRequest","JsonBody","data","LoginResult","ReturnProfile","id","result","ResultCheck","ReturnProfileArray","EmployeeID","ManagerID","ReturnResultCheck","AdminID","ProfileInit","RequestID","Type","Message","Denied","Approved","ReturnString","Pending","ResultReturnRequest","ReturnRecord","LoginFound","NewFirstName","ResultReturnString","NewLastName","NewPassword","Amount","authenticationString","ResultReturn","IDstring","responseData","colorScheme","theme","textType","buttonType","InputTextType","contextValue","HTTPHandler","readUserProfile","FirstName","LastName","setUserProfile","SetHTTPHandler","loading","setLoading","dev","sysContext","React","createContext","SuperProvider","children","useState","setHTTPHandler","readState","Provider","value","GetColor","type","default","ColorA","ColorB","ColorC","ColorD","ColorE","ColorF","light","TextStyle","PageTitle","fontSize","color","italic","fontStyle","fontFamily","HeaderSection","GeneralText","InputText","ButtonColor","normal","exist","adminStyle","inputField","InputTextComponentStyle","height","margin","borderWidth","borderColor","iTSB","backgroundColor","StyleText","text","View","Text","style","alignContent","buttonCheck","func","e","error","console","log","StyleButton","enabled","flexDirection","justifyContent","padding","Button","onPress","title","disabled","StyleInputText","onChangeText","Label","textValue","ShowButton","subFunc","ButtonText","Password","ShowSubmitButton","flex","TextInput","secureTextEntry","HorizontalLine","borderBottomColor","borderBottomWidth","StyleScrollView","ScrollView","marginHorizontal","NavigationBar","props","change","setFunc","level","setPermissionLevel","FoundContext","useContext","useEffect","ShowAdminOpt","UserProfile","getProfileValues","managerName","setManagerName","firstName","setFirstName","lastName","setLastName","setPassword","GetManagerName","Result","TempHelper","TryLogin","ResultString","changeFirstName","changeLastName","changePassword","DataProcessor","InputName","CheckArray","GetInvalidNamingCharacters","i","includes","GetValidNameLength","InputID","ReturnArray","split","RequestArray","TempIDArray","TempDestructID","ExtractRequestIDs","push","InputPassWord","GetPasswordLength","RequestSelectButton","proc","All","InputRequest","setSetRequest","DisplayRequestButtons","ManagerMode","modalVisible","setModalVisible","sendMessage","setSendMessage","displayName","setDisplayName","ConvertPostedDate","Date","PostDate","toLocaleDateString","grabStatus","displayButtonOptions","ManagerChangeRequest","ReturnRequest","DenyRequest","AcceptRequest","deleted","GetName","Modal","animationType","transparent","visible","onRequestClose","styles","centeredView","modalView","alignItems","ModifiedDate","InputMessage","ManagerMessage","StyleSheet","create","marginTop","borderRadius","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","fontWeight","textAlign","modalText","marginBottom","RequestView","mode","RequestType","setRequestType","ButtonDisplay","setButtonDisplay","isAdmin","AdminAccess","transferArray","ReturnRequestArray","map","FilterSearch","v4","GetAllSentRequestOfType","checkAdmin","displayAdminButton","RequestCreation","RequestAmount","setStateAmount","RequestMessage","setRequestMessage","ShowUpdateScreen","setShowUpdateScreen","SendEnabled","setSendEnabled","ConvertAmountToText","ss","Number","setTimeout","NaN","String","RequestCreateView","DisplayRecords","EntryDisplay","setEntry","ManagerGetRecords","ReturnRecords","scrollView","container","paddingTop","StatusBar","currentHeight","AdminNavBar","setAdminIndex","SingleProfileView","profile","AllProfileView","profileArray","setProfiles","setDisplay","AdminPage","adminIndex","switchAdminPage","HomePage","pageTitle","setPageTitle","ActiveTab","setActiveTab","index","switchActiveTable","NoConnectionScreen","CreateProfileScreen","dispatchCreateScreen","dispatch","userPassword","setStatePassword","userName","setStateUserName","userFirstName","setStateFirstName","userLastName","setStateLastName","InitProfile","TryCreateProfile","LoginScreen","logError","setLogError","Show","setShow","reducer","State","action","SignInSwitcher","useReducer","isCreateScreen","Math","floor","random","ConnectionSwitcher","CheckConnection","setConnected","checkConnection","isConnected","showLoadingScreen","switchPage","App"],"mappings":"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","file":"static/js/app.e29341f9.chunk.js","sourcesContent":["\r\n// used for determining the status of a Reimbursement request\r\nexport enum RequestStatus{\r\n    Pending,\r\n    Denied,\r\n    Approved,\r\n    deleted,\r\n    All\r\n}\r\n\r\nexport enum HTTPCommands{\r\n    CreateProfile,\r\n    Login,\r\n    LogOut,\r\n    ChangeFirstName,\r\n    ChangeLastName,\r\n    ChangePassword,\r\n    GetManageName,\r\n    MakeRequest,\r\n    DeleteRequest,\r\n    GetAllSentRequest,\r\n    ManageChangeRequest,\r\n    ManagerGetAllRequest,\r\n    AdminCreateProfile,\r\n    AdminGetAllEmployees,\r\n    AdminAssignManager,\r\n    AdminRemoveEmployee,\r\n    AdminDeleteProfile,\r\n    GetRecords,\r\n    CheckAdminPermissions,\r\n    CheckManagerPermissions\r\n}\r\n\r\n// used for indicating switch codes for communicating over http\r\nexport enum HTTPRequestErrorFlag{\r\n    /**0 used tp verify first and last name length*/\r\n    NameToShort,\r\n    /**1 used to verify first and last name illegal character usage*/\r\n    NameCharError,\r\n    /**2 used to verify password criteria*/\r\n    PasswordInitError,\r\n    /**3  used if the manager does not exist when first creating a profile*/\r\n    InitManagerNotExist,\r\n    /**4   used if any employee listed is not found on the server when trying create a profile*/\r\n    InitEmployeeError,\r\n    /**5 used to indicate that the server failed to create a profile*/\r\n    ProfileServerCreationError, \r\n    /**6 Used to indicate that the first and last name used to generate an initial id already exist*/\r\n    ProfileAlreadyExist,\r\n    /**7 used to indicate that the manager ID request could not be found when searching for a name*/\r\n    ManagerNameNotFound,\r\n    /**8 used to indicate that the employee ID sent does not correspond to a manager, the ID may still be a valid employee*/\r\n    NotAManager,\r\n    /**9 Used as a general notification that the given employee ID does not exist does not exist on in the database*/\r\n    EmployeeNotFoundGeneral,\r\n    /**10 used when the server fails to create a request*/\r\n    RequestCreationError,\r\n    /**11 Used when the Server is having problems updating a profile*/\r\n    ProfileUpdateError,\r\n    /**12 Used to indicate that the server could not find the request*/\r\n    RequestNotFound,\r\n    /**13 Used to indicate that the server could not update the request*/\r\n    RequestUpdateError,\r\n    /**14 Used to indicate that the employee does not have access to the request*/\r\n    EmployeeRequestAccessError,\r\n    /**15 Used to indicate that the server failed to delete a request*/\r\n    RequestDeletionError,\r\n    /**16 Used to indicate that a filter request type was denied*/\r\n    RequestFilterDenied,\r\n    /**17 used to identity that a request was previously approved and denied and can no longer be marked for as deleted*/\r\n    RequestChangeStatusError,\r\n    /**18 used to indicated that a manager can't mark employees request as deleted*/\r\n    RequestManagerDeleteError,\r\n    /**18 used to indicated that a manager can't mark employees request as all*/\r\n    RequestManagerInvalidType,\r\n    /**19 used when a manager does not have privileges to edit a request*/\r\n    ManagerNotValidPrivileges,\r\n    /**20 used to indicate that the employee to assign is not found*/\r\n    EmployeeAssignmentError,\r\n    /**21 used to indicate that the manager to assign is not found*/\r\n    ManagerAssignmentError,\r\n    /**22 used to indicate that the un-assignment process failed on the server*/\r\n    UnAssignError,\r\n    /**23 used to indicate that the user was not registered for authentication*/\r\n    AuthenticationNotFound,\r\n    /**24 used to indicate that the input authentication string does not match the server string*/\r\n    AuthenticationStringError,\r\n    /**25 used as a default value for the system. THIS SHOULD NOT BE USED*/\r\n    Unknown,\r\n    \r\n\r\n\r\n}","import React, { useReducer, useState } from \"react\";\r\nimport { SafeAreaView } from \"react-native\";\r\nimport HTTPRequestHandler from \"../../Project1-GitUtil-Reimbursement/Classes/HTTPRequestHandler\";\r\nimport {Profile, Request} from '../../Project1-GitUtil-Reimbursement/Types/Entity';\r\n\r\n/** Action for reducer function*/ \r\nexport enum SysReducerAction{\r\n    SetProfile\r\n}\r\n\r\n\r\n\r\n/**Object to content the state, dispatcher and initialized state*/\r\nexport interface ContextObject{\r\n    HTTPHandler:HTTPRequestHandler\r\n    readUserProfile:Profile \r\n    setUserProfile:React.Dispatch<React.SetStateAction<Profile>> \r\n    SetHTTPHandler:React.Dispatch<React.SetStateAction<HTTPRequestHandler>>,\r\n    loading:boolean\r\n    setLoading:React.Dispatch<React.SetStateAction<boolean>>\r\n    dev:boolean\r\n}\r\n\r\n\r\n/**used to for default context values; assignment of null just for intellisense*/\r\nconst contextValue: ContextObject = {\r\n    HTTPHandler: new HTTPRequestHandler('',-1),\r\n    readUserProfile: {FirstName: \"\",LastName: \"\"},\r\n    setUserProfile: ()=>{},\r\n    SetHTTPHandler: ()=>{},\r\n    loading:false,\r\n    setLoading:()=>{},\r\n    dev:true\r\n}\r\nexport const sysContext = React.createContext(contextValue)\r\n\r\n\r\n\r\nexport default function SuperProvider( {children} ){\r\n    const useURL:string =''//'https://project-one-backend-joshuabednaz.azurewebsites.net';\r\n    const temp:Profile = {FirstName: \"\",LastName: \"\"}\r\n    const [readUserProfile, setUserProfile] = useState(temp)\r\n    const [HTTPHandler, setHTTPHandler] = useState(new HTTPRequestHandler( useURL,3001))\r\n    const [loading, setLoading] = useState(true);\r\n    /**re-assignment so typescript is happy assign to 'any'*/\r\n    const readState:ContextObject = {\r\n        HTTPHandler: HTTPHandler,\r\n        readUserProfile,\r\n        setUserProfile: setUserProfile,\r\n        SetHTTPHandler: setHTTPHandler,\r\n        loading:loading,\r\n        setLoading: setLoading,\r\n        dev:false\r\n    };\r\n\r\n\r\n    return(<>\r\n        <sysContext.Provider value = { {...readState} }>\r\n                {children}\r\n        </sysContext.Provider>\r\n    \r\n    </>)\r\n\r\n\r\n}","import { HTTPCommands, RequestStatus } from \"../Types/Enums\";\r\nimport  Axios, { AxiosResponse }  from \"axios\";\r\nimport { AdminHTTPCLInterface, LogHTTPCInterface, ManagerHTTPCLInterface, ProfileHTTPCInterface } from \"../Types/HTTPCommands\";\r\nimport { HTTPCreateProfile, Profile, Request } from \"../Types/Entity\";\r\nimport { LoginReturn, MakeRequestForm, ResultReturnCheck, ResultReturnMarkRequest, ResultReturnString, TransferProfile, TransferProfileArray, TransferRecords, TransferRequest, TransferRequestArray } from \"../Types/dto\";\r\nimport {ResultReturnStringID} from '../Types/dto';\r\n\r\n\r\nexport default class  HTTPRequestHandler implements ProfileHTTPCInterface, ManagerHTTPCLInterface, AdminHTTPCLInterface, LogHTTPCInterface{\r\n    // Unused =========================================================\r\n    CheckCreds(UserID: string, Authentication: string): boolean {\r\n        throw new Error(\"Not a useable outside of the server\");\r\n    }// Not Used ======================================================\r\n\r\n    private PortNumber: number;\r\n    private TargetURL: string;\r\n    private AuthenticationString:string ='';\r\n    private UserID:string = '';\r\n    constructor(InputURL:string,InputPortNumber:number=3001){\r\n        this.PortNumber = InputPortNumber ?? 3001 ;\r\n        if(InputURL?.length>1) {this.TargetURL =  InputURL}\r\n        else{this.TargetURL = 'http://localhost'}\r\n    }\r\n    // Internal Commands ===============================================\r\n    private GetRoute(Command:HTTPCommands, ID:string){\r\n        switch(Command){\r\n            case HTTPCommands.CreateProfile:            { return `/Create`;}\r\n            case HTTPCommands.Login:                    { return `/Login/${ID}`;}\r\n            case HTTPCommands.LogOut:                   { return `/LogOut/${ID}`;}\r\n            case HTTPCommands.ChangeFirstName:          { return `/Profile/${ID}/ChangeFirst`;}\r\n            case HTTPCommands.ChangeLastName:           { return `/Profile/${ID}/ChangeLast`;}\r\n            case HTTPCommands.ChangePassword:           { return `/Profile/${ID}/ChangePassword`;}\r\n            case HTTPCommands.GetManageName:            { return `/Profile/${ID}`;}\r\n            case HTTPCommands.MakeRequest:              { return `/Request/${ID}`;}\r\n            case HTTPCommands.DeleteRequest:            { return `/Request/${ID}`;}\r\n            case HTTPCommands.GetAllSentRequest:        { return `/Request/${ID}`;}\r\n            case HTTPCommands.ManageChangeRequest:      { return `/Manager/${ID}`;}\r\n            case HTTPCommands.ManagerGetAllRequest:     { return `/Manager/${ID}`;}\r\n            case HTTPCommands.AdminCreateProfile:       { return `/AdminCreate`;}\r\n            case HTTPCommands.AdminGetAllEmployees:     { return `/Admin/${ID}`;}\r\n            case HTTPCommands.AdminAssignManager:       { return `/Admin/${ID}/Assign`;}\r\n            case HTTPCommands.AdminRemoveEmployee:      { return `/Admin/${ID}/UnAssign`;}\r\n            case HTTPCommands.AdminDeleteProfile:       { return `/Admin/${ID}`;}\r\n            case HTTPCommands.GetRecords:               { return `/Records`;}\r\n            case HTTPCommands.CheckAdminPermissions:    { return `/CheckAdminPermission/${ID}`;}\r\n            case HTTPCommands.CheckManagerPermissions:  { return `/CheckManagerPermission/${ID}`;}\r\n            default:                                    { return `/Connect`;}\r\n        }\r\n    }\r\n    private constructURLPrefect(){\r\n        if(this.PortNumber>0){ return `${this.TargetURL}:${this.PortNumber}`}\r\n        else{ return `${this.TargetURL}`}\r\n    }\r\n    private CreateURL(Command:HTTPCommands,ID:string):string{\r\n        return `${this.constructURLPrefect()}${this.GetRoute(Command,ID)}`;\r\n    }\r\n    //===================================================================\r\n    private async CreateHTTPRequest(Command:HTTPCommands, body:any, ID:string):Promise<AxiosResponse<any, any>>{\r\n        switch(Command){\r\n            case HTTPCommands.CreateProfile:            { return await Axios.post   (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.Login:                    { return await Axios.post   (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.LogOut:                   { return await Axios.patch  (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.ChangeFirstName:          { return await Axios.patch  (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.ChangeLastName:           { return await Axios.patch  (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.ChangePassword:           { return await Axios.patch  (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.GetManageName:            { return await Axios.get    (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.MakeRequest:              { return await Axios.post   (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.DeleteRequest:            { return await Axios.delete (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.GetAllSentRequest:        { return await Axios.get    (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.ManageChangeRequest:      { return await Axios.patch  (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.ManagerGetAllRequest:     { return await Axios.get    (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.AdminCreateProfile:       { return await Axios.post   (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.AdminGetAllEmployees:     { return await Axios.get    (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.AdminAssignManager:       { return await Axios.patch  (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.AdminRemoveEmployee:      { return await Axios.patch  (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.AdminDeleteProfile:       { return await Axios.delete (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.GetRecords:               { return await Axios.get    (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.CheckManagerPermissions:  { return await Axios.get    (this.CreateURL(Command,ID), body);}\r\n            case HTTPCommands.CheckAdminPermissions:    { return await Axios.get    (this.CreateURL(Command,ID), body);}\r\n            default:                                    { return await Axios.get    (this.CreateURL(5000,ID), body)   ;}\r\n        }\r\n    }\r\n\r\n    \r\n    // Helper Functions==========================================\r\n    /**Used tp check the connection to the server*/\r\n    async CheckConnection():Promise<boolean>{\r\n        try {\r\n            const ReturnStuff = await Axios.get( `${this.constructURLPrefect()}/Connect`);\r\n            if(   ReturnStuff.status <300  ){ return true};\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n        return false ;\r\n    }\r\n    /**Attempts to login the user*/ \r\n    async Login(UserID:string, password:string):Promise<LoginReturn> {\r\n        const Command:HTTPCommands=  HTTPCommands.Login ;\r\n        const body:any = {UserID, password, AuthenticationString:''} ; \r\n        const JsonBody = (await this.CreateHTTPRequest(Command,body, UserID)).data;\r\n        const LoginResult:LoginReturn = JsonBody;\r\n        this.UserID = LoginResult.ReturnProfile?.id ?? 'NullLogin';\r\n        this.AuthenticationString = LoginResult.AuthenticationString ?? '';\r\n        return LoginResult;\r\n        \r\n    }\r\n    /**Attempt to logout the user*/\r\n    async LogOut(UserID?:string, Authentication?:string):Promise<ResultReturnCheck>{\r\n        const body:any =this.AuthenticationString;\r\n        const Command:HTTPCommands=  HTTPCommands.LogOut;\r\n        const JsonBody:ResultReturnCheck = (await this.CreateHTTPRequest(Command,body, this.UserID)).data\r\n        return JsonBody;\r\n    }\r\n\r\n    async CheckManagerPermissions(): Promise<ResultReturnCheck> {\r\n        const Command:HTTPCommands=  HTTPCommands.CheckManagerPermissions\r\n        let body = {}\r\n        let result:ResultReturnCheck;\r\n        try {\r\n            result = (await this.CreateHTTPRequest(Command, body, this.UserID)).data\r\n        } catch (error) {\r\n            result = {ResultCheck:false}\r\n        }\r\n        return result\r\n    }\r\n    async CheckAdminPermissions(): Promise<ResultReturnCheck> {\r\n        const Command:HTTPCommands=  HTTPCommands.CheckAdminPermissions\r\n        let body = {}\r\n        let result:ResultReturnCheck;\r\n        try {\r\n            result = (await this.CreateHTTPRequest(Command, body, this.UserID)).data\r\n        } catch (error) {\r\n            result = {ResultCheck:false}\r\n        }\r\n        return result\r\n    }\r\n    \r\n    async AdminGetAllEmployees():Promise<TransferProfileArray>{\r\n        const Command:HTTPCommands=  HTTPCommands.AdminGetAllEmployees;\r\n        const body={AuthenticationString: (this.AuthenticationString)};\r\n        const ReturnProfileArray:TransferProfileArray= (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ReturnProfileArray;\r\n    }\r\n    async AdminAssignManager(EmployeeID:string, ManagerID:string):Promise<ResultReturnCheck>{\r\n        const Command:HTTPCommands=  HTTPCommands.AdminAssignManager;\r\n        const body={EmployeeID, ManagerID,AuthenticationString: (this.AuthenticationString)};\r\n        const ReturnResultCheck:ResultReturnCheck= (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ReturnResultCheck;\r\n    }\r\n    async AdminRemoveEmployeeAssignment(EmployeeID:string, ManagerID:string, AdminID:string):Promise<ResultReturnCheck> {\r\n        const Command:HTTPCommands=  HTTPCommands.AdminRemoveEmployee;\r\n        const body={EmployeeID, ManagerID,AuthenticationString: (this.AuthenticationString)};\r\n        const ReturnResultCheck:ResultReturnCheck= (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ReturnResultCheck;\r\n    }\r\n    async AdminDeleteProfile(EmployeeID:string):Promise<ResultReturnCheck>  {\r\n        const Command:HTTPCommands=  HTTPCommands.AdminDeleteProfile;\r\n        const body={EmployeeID,AuthenticationString: (this.AuthenticationString)};\r\n        const ReturnResultCheck:ResultReturnCheck= (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ReturnResultCheck;\r\n    }\r\n    async AdminCreateProfile(ProfileInit: HTTPCreateProfile, ManagerID: string): Promise<TransferProfile> {\r\n        const Command:HTTPCommands=  HTTPCommands.AdminCreateProfile;\r\n        const body={ProfileInit,ManagerID,AuthenticationString: (this.AuthenticationString)};\r\n        const ReturnProfile:TransferProfile= (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ReturnProfile;\r\n    }\r\n    // Manager functions==================================================================\r\n    async ManagerChangeRequest(ManagerID:string, RequestID:string, Type:RequestStatus, Message:string):Promise<TransferRequest> {\r\n        const Command:HTTPCommands=  HTTPCommands.ManageChangeRequest;\r\n        let body:ResultReturnMarkRequest ;\r\n        switch(Type){\r\n            case RequestStatus.Denied:    { body= { ReturnString:RequestID, Type:RequestStatus.Denied, AuthenticationString: (this.AuthenticationString),Message}; break }\r\n            case RequestStatus.Approved:    {body= { ReturnString:RequestID, Type:RequestStatus.Approved, AuthenticationString: (this.AuthenticationString),Message}; break }\r\n            default:   {  body= { ReturnString:RequestID, Type:RequestStatus.Pending, AuthenticationString: (this.AuthenticationString),Message} ; break }\r\n        }\r\n        const ResultReturnRequest:TransferRequest = (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ResultReturnRequest;\r\n    }\r\n    async ManagerGetAllRequest(ManagerID:string,Type:RequestStatus):Promise<TransferRequestArray> {\r\n        const Command:HTTPCommands=  HTTPCommands.ManagerGetAllRequest ;\r\n        const body ={}\r\n        let ResultReturnRequest:TransferRequestArray= (await this.CreateHTTPRequest(Command, body, `${this.UserID}/${Type}/${this.AuthenticationString}`)).data;\r\n        return ResultReturnRequest\r\n    }\r\n    async ManagerGetRecords(): Promise<TransferRecords> {\r\n        const Command:HTTPCommands=  HTTPCommands.GetRecords ;\r\n        const body={};\r\n        const ReturnRecord:TransferRecords= (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ReturnRecord;\r\n    }\r\n    /**Used to initialize a new account and also login the user*/\r\n    async CreateProfile(ProfileInit:HTTPCreateProfile):Promise<LoginReturn> {\r\n        const Command:HTTPCommands=  HTTPCommands.CreateProfile ;\r\n        const body:HTTPCreateProfile = {... ProfileInit} ; \r\n        const LoginFound:LoginReturn = (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        this.UserID = LoginFound.ReturnProfile.id ?? ''\r\n        this.AuthenticationString = LoginFound.AuthenticationString?? ''\r\n        return LoginFound;\r\n    }\r\n    /**Used to change first name*/\r\n    async ChangeFirstName( NewFirstName:string, EmployeeID?:string):Promise<ResultReturnString> {\r\n        const Command:HTTPCommands=  HTTPCommands.ChangeFirstName ;\r\n        const body:ResultReturnStringID = {ReturnString:NewFirstName, AuthenticationString: (this.AuthenticationString) }\r\n        const ResultReturnString:ResultReturnString = (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ResultReturnString;\r\n    }\r\n    /**Use tp change last name*/\r\n    async ChangeLastName( NewLastName:string, EmployeeID?:string):Promise<ResultReturnString> {\r\n        const Command:HTTPCommands=  HTTPCommands.ChangeLastName ;\r\n        const body:ResultReturnStringID = {ReturnString: NewLastName, AuthenticationString: (this.AuthenticationString) }\r\n        const ResultReturnString:ResultReturnString = (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ResultReturnString;\r\n    }\r\n    /**Used to change password*/\r\n    async ChangePassword(NewPassword:string, EmployeeID?:string):Promise<ResultReturnString> {\r\n        const Command:HTTPCommands=  HTTPCommands.ChangeLastName ;\r\n        const body:ResultReturnStringID = {ReturnString: NewPassword, AuthenticationString: (this.AuthenticationString) }\r\n        const ResultReturnString:ResultReturnString = (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ResultReturnString;\r\n    }\r\n    /**Use to get manager name*/\r\n    async GetManagerName(ManagerID:string):Promise<ResultReturnString> {\r\n        const Command:HTTPCommands=  HTTPCommands.GetManageName;\r\n        const body={}\r\n        const ResultReturnString:ResultReturnString = (await this.CreateHTTPRequest(Command, body, `${this.UserID}/Manager/${ManagerID}`)).data;\r\n        return ResultReturnString;\r\n    }\r\n    async MakeRequest(EmployeeID:string, Amount:number, Message:string):Promise<TransferRequest> {\r\n        const Command:HTTPCommands=  HTTPCommands.MakeRequest ;\r\n        const body:MakeRequestForm = {Amount, Message, AuthenticationString: (this.AuthenticationString)}\r\n        const ResultReturnRequest:TransferRequest = (await this.CreateHTTPRequest(Command, body, this.UserID)).data;\r\n        return ResultReturnRequest;\r\n    }/**use to mark a request s deleted*/\r\n    async DeleteRequest(EmployeeID:string, RequestID:string):Promise<ResultReturnCheck> {\r\n        const Command:HTTPCommands=  HTTPCommands.DeleteRequest;\r\n        const authenticationString = this.AuthenticationString\r\n        const ResultReturn:ResultReturnCheck = (await this.CreateHTTPRequest(Command, {}, `${this.UserID}/${authenticationString}/${RequestID}`)).data;\r\n        return ResultReturn;\r\n    }\r\n    async GetAllSentRequestOfType(IDstring:string, Type:RequestStatus):Promise<TransferRequestArray> {\r\n        const Command:HTTPCommands=  HTTPCommands.GetAllSentRequest ;\r\n        const body ={}\r\n        let responseData:any =(await this.CreateHTTPRequest(Command, body, `${this.UserID}/${this.AuthenticationString}/${Type}`)).data\r\n        const ResultReturnRequest:TransferRequestArray = responseData\r\n\r\n        return ResultReturnRequest;\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport { StyleSheet} from \"react-native\";\r\nimport { sysContext } from \"../components/wrappers/wProviderWrapper\"\r\n\r\n\r\nexport enum colorScheme{\r\n    ColorA,\r\n    ColorB,\r\n    ColorC,\r\n    ColorD,\r\n    ColorE,\r\n    ColorF\r\n}\r\n\r\nexport function GetColor(type:colorScheme){\r\n    const t:theme =0;\r\n    switch(t){\r\n        case theme.default:{\r\n            switch(type){\r\n                case colorScheme.ColorA:{ return  `#000108` }\r\n                case colorScheme.ColorB:{ return  `#333138` }\r\n                case colorScheme.ColorC:{ return  `#515052` }\r\n                case colorScheme.ColorD:{ return  `#cc312E` }\r\n                case colorScheme.ColorE:{ return  `#FFFFFa` }\r\n                case colorScheme.ColorF:{ return  `#2EC9CC` }\r\n                default:                { return  `#cc312E` }\r\n            }\r\n        }\r\n        case theme.light:{\r\n            switch(type){\r\n                case colorScheme.ColorA:{ return  `#553377` }\r\n                case colorScheme.ColorB:{ return  `#882275` }\r\n                case colorScheme.ColorC:{ return  `#996633` }\r\n                case colorScheme.ColorD:{ return  `#445566` }\r\n                case colorScheme.ColorE:{ return  `#227337` }\r\n                case colorScheme.ColorF:{ return  `#993366` }\r\n                default:                { return  `#882255` }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport enum theme{\r\n    default,\r\n    light\r\n}\r\n\r\n//==========================================\r\nexport enum textType{\r\n    PageTitle,\r\n    HeaderSection,\r\n    GeneralText,\r\n    InputText\r\n}\r\nexport function TextStyle(type:textType){\r\n    switch(type){\r\n        case textType.PageTitle:            {return { fontSize:100, color:GetColor(colorScheme.ColorE),    italic: {fontStyle: 'italic'},fontFamily:\"notoserif\"} }\r\n        case textType.HeaderSection:        {return { fontSize:40, color:GetColor(colorScheme.ColorE) } }\r\n        case textType.GeneralText:          {return { fontSize:30, color:GetColor(colorScheme.ColorE)} }\r\n        case textType.InputText:            {return { fontSize:30, color:GetColor(colorScheme.ColorE) } }\r\n        default:                            {return { fontSize:70, color:GetColor(colorScheme.ColorE) } }\r\n    }\r\n}\r\n//==========================================\r\nexport enum buttonType{\r\n    normal,\r\n    exist,\r\n    adminStyle,\r\n    inputField\r\n}\r\nexport function ButtonColor(type: buttonType){\r\n    switch(type){\r\n        case buttonType.normal:         { return GetColor(colorScheme.ColorD)}\r\n        case buttonType.exist:         { return GetColor(colorScheme.ColorD)}\r\n        case buttonType.adminStyle:         { return GetColor(colorScheme.ColorF)}\r\n        case buttonType.inputField:         { return GetColor(colorScheme.ColorC)}\r\n        default:                        { return GetColor(colorScheme.ColorD)}\r\n    }\r\n\r\n}\r\n//==========================================\r\nexport enum InputTextType{\r\n    normal\r\n}\r\nexport function InputTextComponentStyle(type:InputTextType){\r\n    switch(type){\r\n        case InputTextType.normal:    { return { height: 35, margin: 2, borderWidth: 2, fontSize:30, color:GetColor(colorScheme.ColorE) ,borderColor:GetColor(colorScheme.ColorD)}}\r\n    }\r\n}\r\n//==========================================\r\nexport function iTSB(type:InputTextType){\r\n    switch(type){\r\n        case InputTextType.normal:  {return {backgroundColor:GetColor(colorScheme.ColorC)}}\r\n        default:                    {return {backgroundColor:GetColor(colorScheme.ColorC)}}\r\n    }\r\n}\r\nexport function HorizontalLineStyle(){\r\n    return { borderBottomColor: GetColor(colorScheme.ColorE), borderBottomWidth: 3, padding:10 }\r\n}\r\n\r\nexport function getDevViewStyle(){\r\n    const FoundContext = React.useContext(sysContext)\r\n    if(FoundContext.dev){\r\n        const a= 1+ Math.floor(Math.random()*8);\r\n        const b=1+ Math.floor(Math.random()*8);\r\n        const c=1+ Math.floor(Math.random()*8);\r\n        return {backgroundColor:`#0${a}0${b}0${c}`}\r\n    }\r\n    else{return {}}\r\n}\r\n\r\n\r\nexport function ScrollViewStyle(){\r\n    return {backgroundColor: GetColor(colorScheme.ColorB), marginHorizontal: 20}\r\n}\r\n\r\n\r\nexport function ModalStyle(){\r\n    return StyleSheet.create( {modalView:{\r\n        flex:3,\r\n        marginTop: 22,\r\n        marginBottom: 15,\r\n        margin: 20,\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        justifyContent:\"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n    }})\r\n}","import { ButtonColor, buttonType, InputTextComponentStyle, InputTextType, TextStyle, textType, iTSB, HorizontalLineStyle, ScrollViewStyle, ModalStyle, colorScheme, GetColor} from \"./StyleSheet\";\r\nimport { View, Text, Button, TextInput, ActivityIndicator, ScrollView, Modal} from \"react-native\";\r\nimport { StyleSheet } from 'react-native';\r\nimport React from \"react\";\r\nimport { sysContext } from \"../components/wrappers/wProviderWrapper\";\r\n\r\n\r\n\r\nexport function StyleText(text:string,type:textType = textType.GeneralText  ){\r\n    return( <View > \r\n                <Text style={ {...TextStyle(type),alignContent:\"center\"} }> {text} </Text>  \r\n            </View>)}\r\n\r\n\r\nfunction buttonCheck(func:Function,e:any){\r\n    try { func(e) } catch (error) { console.log(` the current function input for this button is not callable ${func}`) }\r\n}\r\nexport function StyleButton(func:Function, text:string, type:buttonType =buttonType.normal, enabled:boolean = true ){\r\n    return (\r\n    <View  style={[ {   flexDirection: \"column\"  , justifyContent:\"space-evenly\",alignContent:\"stretch\", padding:3}]} >\r\n        <Button onPress={(e)=> {buttonCheck(func, e) }} title={text} color={ButtonColor(type)}  disabled={!enabled}/>\r\n    </View>)\r\n}\r\n\r\nexport function StyleInputText(onChangeText:Function,Label:string,textValue:string, ShowButton:boolean = false, subFunc?:Function ,type:InputTextType=InputTextType.normal, ButtonText:string = 'Submit' ,Password:boolean=false){\r\n    function ShowSubmitButton(){\r\n        if(ShowButton)  { return <View style={{flex:1}}> {StyleButton(subFunc, ButtonText, buttonType.inputField )} </View> }\r\n    }\r\n    return (\r\n        <View style={[{padding: 3}]}> \r\n            <View style={[ {flexDirection: \"row\", }]}>\r\n                <View  style={{flex:2}}> \r\n                    {StyleText(Label,textType.InputText )}\r\n                </View>\r\n                <View  style={[{flex:4, padding: 1,...iTSB(type)}]}> \r\n                    <TextInput  style={ InputTextComponentStyle(type)}  onChangeText={(e)=>onChangeText(e)} value={textValue} secureTextEntry = {Password}/>\r\n                </View>\r\n                {ShowSubmitButton()}\r\n            </View>\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default function loadingIcon(){\r\n    const FoundContext = React.useContext(sysContext)\r\n    if(FoundContext.loading){ return( <ActivityIndicator/>) }\r\n    else{return <></>}\r\n    return (<></>)\r\n}\r\n\r\nexport function HorizontalLine(){\r\n    return (\r\n    <View style={{padding:20}}>\r\n        <View style={HorizontalLineStyle()} />\r\n    </View>)\r\n}\r\n\r\nexport function StyleScrollView({children}){\r\n    return(\r\n        <View>\r\n            <ScrollView style={ScrollViewStyle()}>\r\n                {children}\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport function StyleModal(modalVisible:boolean,setModalVisible:Function , children:JSX.Element){\r\n    return(\r\n        <View style={{position:\"absolute\", left:100, top:100}}>\r\n            <View style={{flex:2, backgroundColor: GetColor(colorScheme.ColorB)}}>\r\n                    <Modal style={ModalStyle().modalView}animationType=\"slide\" transparent={true}  visible={modalVisible}  onRequestClose={ () =>{setModalVisible(!modalVisible)} } >\r\n                        <View style={{alignContent:\"center\", justifyContent:\"center\",  backgroundColor:GetColor(colorScheme.ColorA)}}>\r\n                            {children}\r\n                        </View>\r\n                    </Modal>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, View } from \"react-native\";\r\nimport { StyleButton } from \"../../BasicComponents/BasicComponent\";\r\nimport { ContextObject, sysContext } from \"../wrappers/wProviderWrapper\";\r\n\r\nexport default function NavigationBar(props){\r\n    const change:React.Dispatch<React.SetStateAction<number>> = props.setFunc;\r\n    const [level, setPermissionLevel] = useState(0);\r\n    const  FoundContext:ContextObject =React.useContext(sysContext)\r\n\r\n    async function setPermissions(){\r\n        const CheckResult1 = await FoundContext.HTTPHandler.CheckManagerPermissions()\r\n        if(CheckResult1.ResultCheck){\r\n            const CheckResult2 = await FoundContext.HTTPHandler.CheckAdminPermissions()\r\n            if(CheckResult2.ResultCheck){setPermissionLevel(2)}\r\n            else{setPermissionLevel(1)}\r\n        }\r\n        else{setPermissionLevel(0)}\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setPermissions()\r\n        return () => {};},);\r\n    \r\n\r\n    function ShowManagerOpts(){\r\n        if(level>0){\r\n            return (<>\r\n                    <View > {StyleButton(()=>change(3), 'Manage Request')} </View>\r\n                    <View > {StyleButton(()=>change(4), 'Statistics')} </View>\r\n                </>)\r\n        }\r\n        else{ return (<></>)}\r\n    }\r\n    function ShowAdminOpt(){\r\n        if(level>1){\r\n            return(<>\r\n            <View > {StyleButton(()=>change(5), 'Admin Tools')} </View>\r\n            </>)}\r\n        }\r\n\r\n\r\n    return (\r\n        <View style={[ {   flexDirection: \"row\"  }]}>\r\n            <View > {StyleButton(()=>change(0), 'Your Profile')} </View>\r\n            <View > {StyleButton(()=>change(1), 'Your Request')} </View>\r\n            <View > {StyleButton(()=>change(2), 'Make Request')} </View>\r\n            {ShowManagerOpts()}\r\n            {ShowAdminOpt()} \r\n            \r\n        </View>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View } from \"react-native\";\r\nimport { StyleButton, StyleInputText, StyleText } from \"../../../BasicComponents/BasicComponent\";\r\nimport { InputTextType } from \"../../../BasicComponents/StyleSheet\";\r\nimport { LoginReturn } from \"../../../Project1-GitUtil-Reimbursement/Types/dto\";\r\nimport { sysContext } from \"../../wrappers/wProviderWrapper\"\r\n\r\n\r\nexport default function UserProfile(){\r\n    const FoundContext = React.useContext(sysContext)\r\n    function getProfileValues(){\r\n        return FoundContext.readUserProfile;\r\n    }\r\n\r\n    const [managerName, setManagerName] = useState('Not Assigned a manager')\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    async function GetManagerName(){\r\n        try {\r\n            const Result = await FoundContext.HTTPHandler.GetManagerName(getProfileValues().ManagerID)\r\n            if(Result.ReturnString.length > 1) { setManagerName(Result.ReturnString)  }\r\n        } catch (error) {\r\n            console.log('error trying to get manager name')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFirstName(getProfileValues().FirstName)\r\n        setLastName(getProfileValues().LastName)\r\n        setPassword(getProfileValues().Password)\r\n        GetManagerName()\r\n        return () => { } }, [])\r\n\r\n        async function TryLogin(){\r\n            let Login:LoginReturn;\r\n            try {\r\n                const TempHelper = FoundContext.HTTPHandler\r\n                await TempHelper.LogOut()\r\n                Login = await TempHelper.Login(FoundContext.readUserProfile.id,FoundContext.readUserProfile.Password)\r\n                console.log('http handler complete')\r\n                if(Login.ReturnProfile.id){\r\n                    FoundContext.setUserProfile({...Login.ReturnProfile}); \r\n                    console.log(FoundContext.readUserProfile)\r\n                    FoundContext.SetHTTPHandler(TempHelper )\r\n                    setFirstName( FoundContext.readUserProfile.FirstName)\r\n                    setLastName( FoundContext.readUserProfile.LastName)\r\n                    setPassword( FoundContext.readUserProfile.Password)\r\n                    GetManagerName()\r\n\r\n                }\r\n    \r\n            } catch (error) {\r\n                console.log('login failed',error)\r\n            }\r\n        }\r\n\r\n        async function changeFirstName(){\r\n            try {\r\n                const ResultString = await FoundContext.HTTPHandler.ChangeFirstName(firstName,FoundContext.readUserProfile.id)\r\n                console.log('change return: ',ResultString )\r\n                if(ResultString){ setFirstName(ResultString.ReturnString)}\r\n            } catch (error) {\r\n                console.log('First name change error',error)\r\n            }\r\n        }\r\n        async function changeLastName(){\r\n            try {\r\n                const ResultString = await FoundContext.HTTPHandler.ChangeLastName(lastName,FoundContext.readUserProfile.id)\r\n                console.log('change return: ',ResultString )\r\n                if(ResultString){ setLastName(ResultString.ReturnString)}\r\n            } catch (error) {\r\n                console.log('Last name change error',error)\r\n            }\r\n        }\r\n        async function changePassword(){\r\n            try {\r\n                const ResultString = await FoundContext.HTTPHandler.ChangePassword(password,FoundContext.readUserProfile.id)\r\n                console.log('change return: ',ResultString )\r\n                if(ResultString){ setPassword(ResultString.ReturnString)}\r\n            } catch (error) {\r\n                console.log('Password name change error',error)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    return (<>\r\n        <View>  \r\n            <View style={{flexDirection:\"row\"}}>\r\n                <View style={{flex:1}}/>\r\n                <View style={{flex:3}}>  {StyleButton(()=>{TryLogin()}, 'Refresh')  }  </View>\r\n                <View style={{flex:1}}/>\r\n            </View>\r\n            \r\n            <View >{StyleText( `Username: ${FoundContext .readUserProfile.id} `) }   </View>\r\n            <View >{StyleInputText(setFirstName , \"First Name\",firstName, true, ()=>{changeFirstName()})}   </View>\r\n            <View >{StyleInputText(setLastName , \"Last Name\",lastName , true,()=>{changeLastName()})}   </View>\r\n            <View >{StyleInputText(setPassword , \"Password\",password, true, ()=>{changePassword()},InputTextType.normal,'Show' ) }   </View>\r\n            <View style={{flexDirection:\"row\"}}>{StyleText('Manager: ')}  {StyleText(managerName)}  </View>\r\n        </View>\r\n    </>)\r\n}\r\n//,type:InputTextType=InputTextType.normal, ButtonText:string = 'Submit' , Password:boolean=false\r\n\r\n","import {Request} from '../Types/Entity';\r\n\r\n\r\nexport default class DataProcessor{\r\n    /**Return an array of invalid characters*/\r\n    GetInvalidNamingCharacters():string[]{\r\n        return ['#', '$', ' ', '-', '=', '+', '_', '%', '@', '!','~'];\r\n    }\r\n\r\n    /**Checks the input name to see if it is free of invalid characters*/\r\n    ValidCharacterCheck(InputName:string):boolean{\r\n        const CheckArray:string[] = this.GetInvalidNamingCharacters()\r\n        for(let i =0; i <CheckArray.length; i++){\r\n            if(InputName.includes(CheckArray[i])){return false}\r\n        }        \r\n        return true;\r\n    }\r\n    /**Return the minium length for a name*/\r\n    GetValidNameLength():number{\r\n        return 3;\r\n    }\r\n    /**checks to see if a name has the proper length*/\r\n    ValidNameLengthCheck(InputName:string):boolean{\r\n        return (InputName.length>= this.GetValidNameLength())\r\n    }\r\n    /*Searches the input string to attempt to find the [Manager - Employee] IDs in this order. Returns an empty error if invalid or not found*/\r\n    ExtractRequestIDs(InputID:string):string[]{\r\n        const ReturnArray:string[] = InputID.split('~');\r\n        if(ReturnArray.length !== 3) { return [] }\r\n        return [ReturnArray[0], ReturnArray[1]];\r\n    }\r\n\r\n    /**Return an array if for request that are connected to the given ID. This works for both employees and managers*/\r\n    FilterRequestByID( ID:string,RequestArray:Request[]):Request[]{\r\n        const TempIDArray:Request[] =[];\r\n        for(let i = 0; i < RequestArray.length; i++){\r\n            const TempDestructID = this.ExtractRequestIDs(RequestArray[i].id)\r\n            if(TempDestructID.length !==2) {continue}\r\n            else if(TempDestructID.includes(ID)) { TempIDArray.push( RequestArray[i])}\r\n        }\r\n        return TempIDArray;\r\n    }\r\n\r\n    GetPasswordLength(){\r\n        return 3;\r\n    }\r\n\r\n    PasswordValidation(InputPassWord:string):boolean{\r\n        return InputPassWord.length> this.GetPasswordLength();\r\n    }\r\n}\r\n\r\n//const T:DataProcessor = new DataProcessor();\r\n\r\n//console.log(  T.ValidCharacterCheck(\"ghesee\")  )","import { Request } from \"../../Project1-GitUtil-Reimbursement/Types/Entity\";\r\nimport { RequestStatus } from \"../../Project1-GitUtil-Reimbursement/Types/Enums\";\r\nimport {v4} from 'uuid';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Alert, Modal, StyleProp, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport { StyleButton, StyleInputText, StyleModal, StyleText } from \"../../BasicComponents/BasicComponent\";\r\nimport { buttonType, colorScheme, GetColor, textType } from \"../../BasicComponents/StyleSheet\";\r\nimport { sysContext } from \"../wrappers/wProviderWrapper\";\r\nimport DataProcessor from \"../../Project1-GitUtil-Reimbursement/Classes/DataProcessor\";\r\n\r\n\r\nexport default function RequestSelectButton(props){\r\n    const FoundContext = React.useContext(sysContext)\r\n\r\n    // Initialization vars=============================\r\n    const NullRequest:Request = {Amount: 0, RequestStatus:0,PostDate: 0}\r\n    const Type: RequestStatus = RequestStatus.All\r\n    //=================================================\r\n    const proc:DataProcessor = new DataProcessor()\r\n    const InputRequest:Request = props.InputRequest\r\n    const ID:string = proc.ExtractRequestIDs(InputRequest.id)[1]\r\n    const setSetRequest:Function = props.setSetRequest\r\n    const DisplayRequestButtons:Function = props.DisplayRequestButtons\r\n    const ManagerMode:boolean = ( true===  props.ManagerMode);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [sendMessage, setSendMessage] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n\r\n    async function GetName(){\r\n        try {\r\n            const Result = await FoundContext.HTTPHandler.GetManagerName(ID);\r\n            setDisplayName(Result.ReturnString)\r\n        } catch (error) {\r\n            setDisplayName('')\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        GetName()\r\n        return () => {};},[]);\r\n    \r\n\r\n\r\n    function ConvertPostedDate():string{\r\n        const Display = (new Date(InputRequest?.PostDate)).toLocaleDateString()\r\n        return Display;\r\n    }\r\n    function ConvertModDate():string{\r\n        const Display = (new Date(InputRequest?.ModifiedDate)).toLocaleDateString()\r\n        return Display;\r\n    }\r\n    function grabStatus(){\r\n        return RequestStatus[InputRequest?.RequestStatus] ?? 'null';\r\n    }\r\n\r\n    async function AcceptRequest(){\r\n        const Result = await FoundContext.HTTPHandler.ManagerChangeRequest(FoundContext.readUserProfile.id, InputRequest.id,RequestStatus.Approved,sendMessage)\r\n        if(Result?.ReturnRequest){\r\n            setSetRequest({...Result.ReturnRequest})\r\n            DisplayRequestButtons(RequestStatus.Approved)\r\n            setSendMessage('')\r\n            setModalVisible(false)\r\n\r\n        }\r\n        return\r\n    }\r\n    async function DenyRequest(){\r\n        const Result = await FoundContext.HTTPHandler.ManagerChangeRequest(FoundContext.readUserProfile.id, InputRequest.id,RequestStatus.Denied,sendMessage)\r\n        if(Result?.ReturnRequest){\r\n            setSetRequest({...Result.ReturnRequest})\r\n            DisplayRequestButtons(RequestStatus.Denied)\r\n            setSendMessage('')\r\n            setModalVisible(false)\r\n        }\r\n        return\r\n    }\r\n    async function DeleteRequest(){\r\n        const Result = await FoundContext.HTTPHandler.DeleteRequest(FoundContext.readUserProfile.id, InputRequest.id)\r\n        if(Result.ResultCheck){\r\n            DisplayRequestButtons(RequestStatus.deleted)\r\n            setSendMessage('')\r\n            setModalVisible(false)\r\n        }\r\n        return\r\n    }\r\n\r\n    function displayButtonOptions(){\r\n        if(ManagerMode){\r\n            if(InputRequest?.RequestStatus == RequestStatus.Pending){ return ( \r\n                <View style={{flexDirection: 'column'}}>\r\n                    <View> {StyleInputText(setSendMessage,'Message: ',sendMessage )}  </View>\r\n                    <View style={{flexDirection: 'row'}} > \r\n                        <View style={{flex:1}}/>\r\n                        <View style={{flex:3}}> {StyleButton(()=>DenyRequest(), 'Deny')} </View>\r\n                        <View style={{flex:3}}> {StyleButton(()=>AcceptRequest(), 'Approve')} </View>\r\n                        <View style={{flex:1}}/>\r\n                    <View> </View>\r\n                </View>\r\n\r\n                </View>\r\n                )}\r\n            return (<></>)\r\n        }\r\n        else{\r\n            if(InputRequest?.RequestStatus == RequestStatus.Pending){return (\r\n                <View style={{ padding:10, flexDirection:\"row\"}}>\r\n                    <View style={{flex:1}}/>\r\n                    <View style={{flex:3}}> {StyleButton(()=>DeleteRequest(), 'Delete')} </View>\r\n                    <View style={{flex:1}}/>\r\n                </View>\r\n            )}\r\n            return (<></>)\r\n        }\r\n    }\r\n\r\n    function GetInnerModal(){\r\n        return(\r\n        <View >\r\n            <View style={{flexDirection:\"row\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                <View style={{flex:1}}/>\r\n                <View style={{flex:1}}>  {StyleText('Reimbursement', textType.HeaderSection)} </View>\r\n                <View style={{flex:1}}/>\r\n            </View>\r\n            <View style={{flexDirection: 'column', justifyContent: 'center', alignItems: 'center',}}>\r\n                <View style={{flexDirection:\"row\"}}> {StyleText('Post Date') }  {StyleText(ConvertPostedDate()) } </View>\r\n                <View style={{flexDirection:\"row\"}}> {StyleText('Modified date') } {StyleText(ConvertModDate()) } </View>\r\n            </View>\r\n            <View style={{flexDirection: 'row',justifyContent: 'center', alignItems: 'center'}}>\r\n                <View style ={{padding:5}} > {StyleText('Amount: ') } </View> <View style ={{padding:5}} > {StyleText('500') } </View>\r\n                <View style ={{padding:5}} > {StyleText('Status: ') } </View> <View style ={{padding:5}} > {StyleText(grabStatus()) } </View>\r\n            </View>\r\n            <View style={{flexDirection:'column', backgroundColor:GetColor(colorScheme.ColorC) }}>\r\n                <View style={{flexDirection: 'row'}}>  {StyleText('Request Reason: ')}  {StyleText(InputRequest.InputMessage)} </View>\r\n                <View style={{flexDirection: 'row'}}>  {StyleText('Manager Response: ')}  {StyleText(InputRequest.ManagerMessage)} </View>\r\n            </View>\r\n            <View >{  displayButtonOptions()  }</View>\r\n            <View style={{ padding:10, flexDirection:\"row\"}} >\r\n                <View style={{flex:1}}/>\r\n                <View style={{flex:3}} >{StyleButton(()=> setModalVisible(false), ' X ', buttonType.exist )}</View>\r\n                <View style={{flex:1}}/>\r\n            </View>\r\n        </View>)\r\n    }\r\n\r\n\r\n    function Model(){\r\n        return(\r\n        <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {setModalVisible(!modalVisible);}}\r\n      >\r\n        <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n                {GetInnerModal()}\r\n            </View>\r\n        </View>\r\n      </Modal>)}\r\n      //{/* {StyleModal(modalVisible, setModalVisible, GetInnerModal())} */}\r\n\r\n    return (\r\n        <>\r\n            { Model()}\r\n            {StyleButton(()=> setModalVisible(true),`${displayName} ${ConvertPostedDate()}: $${ InputRequest.Amount}, ${grabStatus()}` )}\r\n        </>)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 22\r\n    },\r\n    modalView: {\r\n      margin: 20,\r\n      backgroundColor:GetColor(colorScheme.ColorB),\r\n      borderRadius: 20,\r\n      padding: 35,\r\n      alignItems: \"center\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 4,\r\n      elevation: 5\r\n    },\r\n    button: {\r\n      borderRadius: 20,\r\n      padding: 10,\r\n      elevation: 2\r\n    },\r\n    buttonOpen: {\r\n      backgroundColor: \"#F194FF\",\r\n    },\r\n    buttonClose: {\r\n      backgroundColor: \"#2196F3\",\r\n    },\r\n    textStyle: {\r\n      color: \"white\",\r\n      fontWeight: \"bold\",\r\n      textAlign: \"center\"\r\n    },\r\n    modalText: {\r\n      marginBottom: 15,\r\n      textAlign: \"center\"\r\n    }\r\n  })\r\n","import React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Request } from \"../../../Project1-GitUtil-Reimbursement/Types/Entity\"\r\nimport { RequestStatus } from \"../../../Project1-GitUtil-Reimbursement/Types/Enums\"\r\nimport RequestSelectButton from \"../../element/eRequestSelectButton\"\r\nimport { sysContext } from \"../../wrappers/wProviderWrapper\"\r\nimport {v4} from 'uuid';\r\nimport { StyleButton, StyleScrollView, StyleText } from \"../../../BasicComponents/BasicComponent\"\r\nimport { textType } from \"../../../BasicComponents/StyleSheet\"\r\nimport {ScrollView, StatusBar, View } from \"react-native\"\r\nimport { ResultReturnCheck, TransferRequestArray } from \"../../../Project1-GitUtil-Reimbursement/Types/dto\"\r\n\r\n\r\n\r\nexport default function RequestView(props){\r\n    const mode:boolean = props.ManagerMode\r\n    const FoundContext = React.useContext(sysContext)\r\n\r\n    // Initialization vars=============================\r\n    const NullRequest:Request = {Amount: 0, RequestStatus:0,PostDate: 0}\r\n    //=================================================\r\n    const [RequestID, setSetRequest] = useState(NullRequest)\r\n    const [RequestType, setRequestType] = useState(RequestStatus.Pending)\r\n    const [ButtonDisplay, setButtonDisplay] = useState([<></>])\r\n    const [isAdmin, AdminAccess] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        FilterSearch(RequestType);\r\n        if(mode){checkAdmin()}\r\n        return () => {}}, []);\r\n\r\n    async function checkAdmin(){\r\n        try {\r\n            const Result:ResultReturnCheck = await FoundContext.HTTPHandler.CheckAdminPermissions()\r\n            AdminAccess(Result.ResultCheck)\r\n        } catch (error) {\r\n            AdminAccess(false)\r\n        }\r\n    }\r\n    async function DisplayRequestButtons(type:RequestStatus){\r\n        if(mode){\r\n            console.log('ManagerMode')\r\n            let transferArray:TransferRequestArray;\r\n            try {\r\n                console.log('manager refresh')\r\n                transferArray = await FoundContext.HTTPHandler.ManagerGetAllRequest(FoundContext.readUserProfile.id,type)\r\n                console.log('no error')\r\n                if(! (transferArray.ReturnRequestArray.length >0) ) { \r\n                    setButtonDisplay([ StyleText('No Request Found') ] );return;\r\n                } \r\n                else{\r\n                    setButtonDisplay(   transferArray.ReturnRequestArray.map( (e)=> <RequestSelectButton key = {v4()} InputRequest ={e} setSetRequest={setSetRequest} ManagerMode={mode} DisplayRequestButtons={FilterSearch}/>) )\r\n                }\r\n            } catch (error) {\r\n                setButtonDisplay([ StyleText('No Request Found') ] );return;\r\n            }\r\n        }\r\n        else{\r\n            console.log('general fetch')\r\n            let transferArray:TransferRequestArray;\r\n            try {\r\n                console.log('general refresh')\r\n                transferArray = await FoundContext.HTTPHandler.GetAllSentRequestOfType(FoundContext.readUserProfile.id, type)\r\n            } catch (error) {\r\n                setButtonDisplay([StyleText('No Request Found')] );return;\r\n            }\r\n            if(! (transferArray.ReturnRequestArray.length >0) ) { \r\n                setButtonDisplay([StyleText('No Request Found')] )\r\n                return;\r\n            } \r\n            setButtonDisplay(   transferArray.ReturnRequestArray.map( (e)=> <RequestSelectButton key = {v4()} InputRequest ={e} setSetRequest={setSetRequest} ManagerMode={mode}  DisplayRequestButtons={FilterSearch}/>) )\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    function FilterSearch(type:RequestStatus){\r\n        setRequestType(type);\r\n        DisplayRequestButtons(type)\r\n    }\r\n\r\n    function displayAdminButton(){\r\n        if(isAdmin){ return( <View style={{flex:1}}> {StyleButton( ()=> FilterSearch(RequestStatus.deleted) ,'Deleted')} </View>  ) } }\r\n\r\n    return(\r\n    <View style={{flexDirection:\"column\", justifyContent:\"center\"}}>\r\n        <View style={{flexDirection:\"row\"}}> \r\n            <View style={{flex:1}}/>\r\n            <View style={{flex:5, alignItems:\"center\",justifyContent:\"center\"}}> {StyleText(`Filter: ${RequestStatus[RequestType]}`, textType.HeaderSection)} </View>\r\n            <View style={{flex:1}}/>\r\n        </View>\r\n        <View style={ { flexDirection: \"row\" }}>  \r\n            <View style={{flex:1}}/>\r\n            <View style={{flex:1}}> {StyleButton(()=>FilterSearch(RequestStatus.All) ,'All')} </View>\r\n            <View style={{flex:1}}> {StyleButton(()=>FilterSearch(RequestStatus.Pending) ,'Pending')} </View>\r\n            <View style={{flex:1}}> {StyleButton(()=>FilterSearch(RequestStatus.Denied) ,'Denied')} </View>\r\n            <View style={{flex:1}}> {StyleButton(()=>FilterSearch(RequestStatus.Approved) ,'Approved')}</View>\r\n            {displayAdminButton()}\r\n            <View style={{flex:1}}/>\r\n        </View>\r\n        <View style={{flexDirection:\"row\"}}>\r\n            <View style={{flex:1}}/>\r\n            <View style={{flex:6}}> {StyleButton( ()=> {()=>DisplayRequestButtons(RequestType);} , 'Refresh') }  </View>\r\n            <View style={{flex:1}}/>\r\n        </View>\r\n        <View style={{padding:10}}>\r\n            <StyleScrollView>\r\n                {ButtonDisplay}\r\n            </StyleScrollView>\r\n        </View>\r\n    </View>)\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { View } from \"react-native\"\r\nimport { StyleButton, StyleInputText, StyleText } from \"../../../BasicComponents/BasicComponent\"\r\nimport { buttonType, InputTextType, TextStyle, textType } from \"../../../BasicComponents/StyleSheet\"\r\nimport { TransferRequest } from \"../../../Project1-GitUtil-Reimbursement/Types/dto\"\r\nimport { sysContext } from \"../../wrappers/wProviderWrapper\"\r\n\r\n\r\nexport default function RequestCreation(){\r\n    const FoundContext = React.useContext(sysContext)\r\n    const [RequestAmount, setStateAmount] = useState(0)\r\n    const [RequestMessage, setRequestMessage] = useState('General Request')\r\n    const [ShowUpdateScreen, setShowUpdateScreen] = useState(false)\r\n    const [SendEnabled, setSendEnabled] = useState(false)\r\n    function ConvertAmountToText(ss:string){\r\n        setStateAmount(Number(ss))\r\n        setSendEnabled(true)\r\n        setTimeout(()=>{\r\n            if(RequestAmount < 0){ console.log(RequestAmount);setStateAmount(0); setSendEnabled(false) }\r\n            if(RequestAmount === NaN) {console.log(RequestAmount);setStateAmount(0); setSendEnabled(false)} \r\n            if(String(RequestAmount) === 'NaN') {console.log(RequestAmount);setStateAmount(0); setSendEnabled(false)} \r\n        },500)\r\n    }\r\n\r\n    async function SendRequest(){\r\n        const T:TransferRequest =  await FoundContext.HTTPHandler.MakeRequest('ID', RequestAmount,RequestMessage)\r\n        if(T){\r\n            setShowUpdateScreen(true); \r\n            setStateAmount(0);\r\n            setRequestMessage('');\r\n            return }\r\n        else{\r\n            setStateAmount(0);\r\n            setRequestMessage('');\r\n            console.log('Request failed');\r\n        }\r\n    }\r\n\r\n    function RequestSubmitView(){\r\n        return (<>\r\n            <View>\r\n                <View style={{padding:50}}> {StyleText('Thank you for making a request',textType.HeaderSection)} </View>\r\n                <View style={{flexDirection:\"row\"}}>\r\n                    <View style={{flex:1}}/>\r\n                    <View style={{flex:3}}> {StyleButton( ()=> setShowUpdateScreen(false), 'create new request')} </View>\r\n                    <View style={{flex:1}}/>\r\n                </View>\r\n            </View>\r\n        </>)\r\n    }\r\n    function RequestCreateView(){\r\n        return(<>\r\n            <View>\r\n                <View style={{padding:10, alignItems:\"center\", justifyContent:\"center\"}}>\r\n                    <View style={{alignContent:\"center\", justifyContent:\"center\"}}>\r\n                        {StyleText(\"Create Your Request\",textType.HeaderSection)} \r\n                    </View>\r\n                    \r\n                </View>\r\n                <View >\r\n                    {StyleInputText(ConvertAmountToText  , \"Amount\", (()=> { let temp = RequestAmount; return String(temp)}) () )}   \r\n                </View>\r\n                <View >\r\n                    {StyleInputText( setRequestMessage , \"Description\",RequestMessage)} \r\n                </View>\r\n                <View style={{padding:10, flexDirection:\"row\"}}>\r\n                    <View style={{flex:1}}/>\r\n                    <View style={{flex:3}} > {StyleButton(()=>{ SendRequest()},'Send Request',buttonType.normal,SendEnabled ) }  </View> \r\n                    <View style={{flex:1}}/>\r\n                </View>\r\n            </View>\r\n        </>)\r\n    }\r\n    function SwitchDisplayView(){\r\n        if(ShowUpdateScreen) {return RequestSubmitView()}\r\n        else {return RequestCreateView()}\r\n    }\r\n\r\n    return (<>\r\n        {SwitchDisplayView()}\r\n    </>)\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { ScrollView, StatusBar, View } from \"react-native\"\r\nimport { StyleText } from \"../../../BasicComponents/BasicComponent\"\r\nimport { TransferRecords } from \"../../../Project1-GitUtil-Reimbursement/Types/dto\"\r\nimport { sysContext } from \"../../wrappers/wProviderWrapper\"\r\n\r\n\r\nexport default function DisplayRecords(){\r\n    const FoundContext = React.useContext(sysContext)\r\n    const [EntryDisplay, setEntry] = useState([<></>])\r\n\r\n    async function DisplayRecords(){\r\n        const Result:TransferRecords = await FoundContext.HTTPHandler.ManagerGetRecords()\r\n        setEntry( Result.ReturnRecords.map((   (e)=><View> {StyleText(e)}  </View> ) )   )\r\n    }\r\n\r\n    useEffect(() => {\r\n        DisplayRecords()\r\n\r\n        return () => {};}, []);\r\n\r\n    return(\r\n    <View>\r\n        <ScrollView style={styles.scrollView}>\r\n          {EntryDisplay} \r\n        </ScrollView>\r\n    </View>)\r\n}\r\n\r\n\r\n\r\nconst styles = ({\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: StatusBar.currentHeight,\r\n    },\r\n    scrollView: {\r\n      backgroundColor: '#222222',\r\n      marginHorizontal: 20,\r\n    },\r\n    text: {\r\n      fontSize: 42,\r\n    },\r\n  });","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { HorizontalLine, StyleButton } from \"../../BasicComponents/BasicComponent\";\r\nimport { buttonType } from \"../../BasicComponents/StyleSheet\";\r\n\r\n\r\nexport default function AdminNavBar(props){\r\n    const setAdminIndex:React.Dispatch<React.SetStateAction<number>> = props.setAdminIndex\r\n\r\n    return(\r\n        <View>\r\n            <View style={[ {   flexDirection: \"row\", justifyContent:\"center\", alignContent:\"center\"  }]}>\r\n                <View> {StyleButton(()=>{setAdminIndex(0)}, 'View All Profiles',buttonType.adminStyle )} </View>\r\n                <View> {StyleButton(()=>{setAdminIndex(1)}, 'View All Request',buttonType.adminStyle)} </View>\r\n                <View> {StyleButton(()=>{setAdminIndex(2)}, 'Create Profile',buttonType.adminStyle)} </View>\r\n                <View> {StyleButton(()=>{setAdminIndex(4)}, 'Delete Profile',buttonType.adminStyle)} </View>\r\n                <View> {StyleButton(()=>{setAdminIndex(3)}, 'Assign Manager',buttonType.adminStyle)} </View>\r\n                <View> {StyleButton(()=>{setAdminIndex(4)}, 'Un-Assign Manager',buttonType.adminStyle)} </View>\r\n            </View>\r\n            {HorizontalLine()}\r\n        </View>)\r\n}","import { View } from \"react-native\";\r\nimport { StyleButton, StyleText } from \"../../../BasicComponents/BasicComponent\";\r\nimport { Profile } from \"../../../Project1-GitUtil-Reimbursement/Types/Entity\";\r\n\r\n\r\nexport default function SingleProfileView(props){\r\n    const profile:Profile = props.profile\r\n\r\n    return(<View>\r\n        {StyleButton(()=>{},`${profile.FirstName} ${profile.LastName}` )}\r\n    </View>)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { ScrollView, View } from \"react-native\";\r\nimport { StyleText } from \"../../../BasicComponents/BasicComponent\";\r\nimport { textType } from \"../../../BasicComponents/StyleSheet\";\r\nimport { TransferProfileArray } from \"../../../Project1-GitUtil-Reimbursement/Types/dto\";\r\nimport { sysContext } from \"../../wrappers/wProviderWrapper\";\r\nimport SingleProfileView from \"./singleProfilebutton\";\r\n\r\n\r\n\r\n\r\nexport default function AllProfileView(props){\r\n    const FoundContext = React.useContext(sysContext)\r\n    const [profileArray, setProfiles] = useState([<></>])\r\n    const title:string = props.title\r\n\r\n    async function setDisplay(){\r\n        const Result:TransferProfileArray = await FoundContext.HTTPHandler.AdminGetAllEmployees()\r\n        setProfiles( Result.ReturnProfileArray.map((   (profile)=><View> <SingleProfileView key={profile.id} profile={profile}/> </View> ) )   )\r\n    }\r\n    useEffect(() => {\r\n        setDisplay()\r\n        return () => {};}, []);\r\n    \r\n\r\n    return(\r\n        <View style={{ justifyContent:\"center\", alignContent:\"center\", flexDirection:\"column\" }}>\r\n            <View>{StyleText(title,textType.HeaderSection)}</View>\r\n            <ScrollView>\r\n                {profileArray}\r\n            </ScrollView>\r\n        </View>)\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { StyleText } from \"../../BasicComponents/BasicComponent\";\r\nimport AdminNavBar from \"./AdminNavBar\";\r\nimport AllProfileView from \"./allprofiles/AllProfileView\";\r\n\r\n\r\nexport default function AdminPage(){\r\n    const [adminIndex, setAdminIndex] = useState(0);\r\n    function switchAdminPage(){\r\n        switch(adminIndex){\r\n            case 0:     { return (  <View> <AllProfileView title={'All Profiles'}/>  </View>    )}\r\n            default:    { return (  <View>{StyleText('Default testing') } </View>    )}\r\n        }\r\n    }\r\n\r\n    return(\r\n    <View style={{ flexDirection:'column', justifyContent:\"center\", alignContent:\"center\" }}>\r\n        <View> <AdminNavBar setAdminIndex={setAdminIndex}/>  </View>\r\n        <View>  {switchAdminPage()}  </View>\r\n    </View>)\r\n}","import { useState } from \"react\";\r\nimport NavigationBar from \"../element/eNavigationBar\";\r\nimport UserProfile from \"../panels/homepage/pUserProfile\";\r\nimport RequestView from \"../panels/homepage/pRequestView\";\r\nimport RequestCreation from \"../panels/homepage/pRequestCreation\";\r\nimport DisplayRecords from \"../panels/homepage/pDisplayRecords\";\r\nimport { View,Text, Button } from \"react-native\";\r\nimport { HorizontalLine, StyleText } from \"../../BasicComponents/BasicComponent\";\r\nimport { textType } from \"../../BasicComponents/StyleSheet\";\r\nimport AdminPage from \"../adminTools/AdminPage\";\r\n\r\n\r\nexport default function HomePage(){\r\n    const [pageTitle, setPageTitle] = useState('Your Profile');\r\n    const [ActiveTab, setActiveTab] = useState(0)\r\n\r\n    \r\n\r\n    function change(index:number){\r\n        setActiveTab(index)\r\n        switch(index){\r\n            case 0:     { setPageTitle('Your Profile')      ;break}\r\n            case 1:     { setPageTitle('Your Request')      ;break}\r\n            case 2:     { setPageTitle('Make a request')    ;break}\r\n            case 3:     { setPageTitle('Manage Request')    ;break}\r\n            case 4:     { setPageTitle('Statistics')        ;break}\r\n            case 5:     { setPageTitle('Admin Tools')       ;break}\r\n            default:    { setPageTitle('Your Profile')      ;break}\r\n        }\r\n    }\r\n\r\n    function switchActiveTable(){\r\n        switch(ActiveTab){\r\n            case 0:     { return ( <UserProfile/>  ) }\r\n            case 1:     { return ( <RequestView ManagerMode = { false}/>)}\r\n            case 2:     { return ( <RequestCreation/> ) }\r\n            case 3:     { return ( <RequestView ManagerMode = { true }/> ) }\r\n            case 4:     { return ( <DisplayRecords/> ) }\r\n            case 5:     { return ( <AdminPage/>) }\r\n            default:    { return ( <UserProfile/>  )  }\r\n        }\r\n    }\r\n\r\n    return(<>\r\n    <View style={[ {   flexDirection: \"column\", justifyContent:\"center\", alignContent:\"center\"  }]}>\r\n        <View style={{padding:50,justifyContent:\"center\",alignContent:\"center\"}}> \r\n            { StyleText(pageTitle,textType.PageTitle) }\r\n        </View>\r\n        <NavigationBar setFunc={ change }/>\r\n        {HorizontalLine()}\r\n\r\n        {switchActiveTable()}\r\n\r\n        {HorizontalLine()}\r\n    </View>\r\n    </>)\r\n}","import { View, Text } from \"react-native\"\r\nimport loadingIcon, { StyleText } from \"../../BasicComponents/BasicComponent\"\r\nimport { textType } from \"../../BasicComponents/StyleSheet\"\r\n\r\n\r\n\r\nexport default function NoConnectionScreen(){\r\n    return(\r\n        <View style={{ alignItems: 'center', justifyContent: 'center', }}>\r\n            {StyleText('Sorry, Cannot Connect...',textType.PageTitle)}\r\n            {StyleText('The Server might be down, try again later',textType.HeaderSection)}\r\n        </View>)\r\n}","import React, { useState } from \"react\"\r\nimport { View, Text, Button, TextInput } from \"react-native\";\r\nimport { HTTPCreateProfile } from \"../../../Project1-GitUtil-Reimbursement/Types/Entity\";\r\nimport { textType } from \"../../../BasicComponents/StyleSheet\";\r\nimport { ContextObject, sysContext, SysReducerAction } from \"../../wrappers/wProviderWrapper\"\r\nimport {StyleInputText, StyleButton, StyleText } from \"../../../BasicComponents/BasicComponent\";\r\n\r\n\r\nexport default function CreateProfileScreen(props){\r\n    const dispatchCreateScreen = props.dispatch\r\n    // Basic setup to get all context and dispatcher short hand %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n    let FoundContext:ContextObject;\r\n    FoundContext = React.useContext(sysContext)\r\n    /**this function is used get to grab the HTTP handler as a short hand*/\r\n    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n    const [userPassword, setStatePassword] = useState('password')\r\n    const [userName, setStateUserName] = useState('username')\r\n    const [userFirstName, setStateFirstName] = useState('first name')\r\n    const [userLastName, setStateLastName] = useState('last name')\r\n\r\n    async function TryCreateProfile(){\r\n        const InitProfile:HTTPCreateProfile = { FirstName: userFirstName,LastName: userLastName,Password: userPassword,id: userName};\r\n        const TempHelper = FoundContext.HTTPHandler\r\n        const UserProfile = await TempHelper.CreateProfile(InitProfile)\r\n        if(UserProfile.ReturnProfile){ \r\n            FoundContext.SetHTTPHandler(TempHelper);\r\n            FoundContext.setUserProfile(UserProfile.ReturnProfile) }\r\n    }\r\n    \r\n    return (\r\n        <View style={{ alignItems:\"center\",justifyContent:\"center\" }} >\r\n            <View> {StyleText(\"Create Your Profile\", textType.PageTitle)} </View>\r\n            <View style={{ flexDirection:\"row\",alignItems:\"center\" }}> \r\n                <View style={{flex:1, flexDirection:\"column\"}}>\r\n                    <View >{StyleInputText(setStateFirstName, \"First Name\",userFirstName)}   </View>\r\n                    <View >{StyleInputText(setStateLastName, \"Last Name\", userLastName)}  </View>\r\n                    <View >{StyleInputText(setStateUserName, \"Username\", userName)}  </View>\r\n                    <View >{StyleInputText(setStatePassword, \"Password\", userPassword)} </View>\r\n                    <View style={{   flexDirection: \"row\"  }}> \r\n                        <View style ={{flex:1}}> {StyleButton(()=>dispatchCreateScreen(), \"Back to Login\")} </View>\r\n                        <View style ={{flex:1}}> {StyleButton(()=>TryCreateProfile(), \"Submit\")}</View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\"\r\nimport { View } from \"react-native\"\r\nimport loadingIcon, { StyleButton, StyleInputText, StyleText } from \"../../../BasicComponents/BasicComponent\"\r\nimport { colorScheme, GetColor, InputTextType, textType } from \"../../../BasicComponents/StyleSheet\"\r\nimport { LoginReturn } from \"../../../Project1-GitUtil-Reimbursement/Types/dto\"\r\nimport { sysContext } from \"../../wrappers/wProviderWrapper\"\r\n\r\n\r\nexport default function LoginScreen(props:any){\r\n    // Basic setup to get all context and dispatcher short hand %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n    const FoundContext = React.useContext(sysContext)\r\n    /**this function is used get to grab the HTTP handler as a short hand*/\r\n\r\n    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n    const dispatchCreateScreen = props.dispatch\r\n    const [userPassword, setStatePassword] = useState('')\r\n    const [userName, setStateUserName] = useState('')\r\n    const [logError, setLogError] = useState(false);\r\n    const [Show, setShow] = useState(true);\r\n\r\n    async function TryLogin(){\r\n        let Login:LoginReturn;\r\n        try {\r\n            setLogError(false)\r\n            const TempHelper = FoundContext.HTTPHandler\r\n            console.log('http handler being called')\r\n            Login = await TempHelper.Login(userName,userPassword)\r\n            console.log('http handler complete')\r\n            if(Login.ReturnProfile.id){\r\n                FoundContext.setUserProfile({...Login.ReturnProfile}); \r\n                FoundContext.SetHTTPHandler(TempHelper )\r\n            }\r\n            else{setLogError(true)}\r\n\r\n        } catch (error) {\r\n            setLogError(true)\r\n        }\r\n    }\r\n\r\n    function DisplayNotFound(){\r\n        if(logError){\r\n            return( \r\n                <View style={{backgroundColor:GetColor(colorScheme.ColorB)}}>\r\n                    {StyleText(\"This username or password does not match the server\")}\r\n                </View>)\r\n        }\r\n        else{return (<></>)}\r\n    }\r\n\r\n    return(\r\n    <View style={{alignItems:\"center\",justifyContent:\"center\"}}>\r\n        <View>\r\n            {StyleText(\"Stark-Tower Reimburse ™\", textType.PageTitle)} \r\n        </View>\r\n        <View>\r\n            <View style={ {   flexDirection: \"column\",   }}>\r\n                <View >{StyleInputText(setStateUserName , \"Username\",userName)}   </View>\r\n                <View >{StyleInputText(setStatePassword, \"Password\",userPassword, true, ()=>{ setShow(!Show)},InputTextType.normal, \"Show\",Show)}   </View>\r\n                <View style={[{   flexDirection: \"row\"  }]}> \r\n                    <View style ={[{flex:1}]}> {StyleButton(()=>dispatchCreateScreen(), \"Create Profile\")} </View>\r\n                    <View style ={[{flex:1}]}> {StyleButton(()=>TryLogin(), \"Login\")}</View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View> { DisplayNotFound()} </View>\r\n\r\n    </View>)\r\n}","import React, { useReducer, useState } from \"react\"\r\nimport { View } from \"react-native\";\r\nimport { getDevViewStyle } from \"../../BasicComponents/StyleSheet\";\r\nimport CreateProfileScreen from \"../panels/signin/pCreateProfileScreen\"\r\nimport LoginScreen from \"../panels/signin/pLoginScreen\"\r\n\r\nfunction reducer(State:boolean,action:any){ return !(State); }\r\nconst initState:boolean = false;\r\n\r\nexport default function SignInSwitcher(){\r\n    const [isCreateScreen, dispatchCreateScreen] =   useReducer(reducer, initState);\r\n\r\n    function SignInView(){\r\n        if(isCreateScreen)  {return <CreateProfileScreen dispatch={dispatchCreateScreen}/>  }\r\n        else                {return <LoginScreen dispatch={dispatchCreateScreen}/> }\r\n    }\r\n\r\n    return (\r\n        <View style={{...getDevViewStyle(), padding:5, height:800, width:1300, alignItems:\"center\",justifyContent:\"center\"}}>\r\n            {SignInView()}\r\n        </View>\r\n        )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { View } from \"react-native\"\r\nimport { StyleText } from \"../../BasicComponents/BasicComponent\"\r\nimport { textType } from \"../../BasicComponents/StyleSheet\"\r\nimport HomePage from \"../page/HomePage\"\r\nimport NoConnectionScreen from \"../page/NoConnectionScreen\"\r\nimport { ContextObject,SysReducerAction, sysContext } from \"./wProviderWrapper\"\r\nimport SignInSwitcher from \"./wSigninSwitcher\"\r\n\r\n\r\n\r\nexport default function ConnectionSwitcher(){\r\n    // Basic setup to get all context and dispatcher short hand %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n    const  FoundContext:ContextObject =React.useContext(sysContext)\r\n    /**this function is used get to grab the HTTP handler as a short hand*/\r\n    //{loadingIcon()}\r\n    useEffect(() => {\r\n        checkConnection()\r\n        return () => {};}, []);\r\n    \r\n    const [isConnected, setConnected] = useState(false)\r\n    async function checkConnection(){ \r\n        try {\r\n            FoundContext.setLoading(true)\r\n            const value = await FoundContext.HTTPHandler.CheckConnection();\r\n            if(value){\r\n                setConnected(value)\r\n                FoundContext.setLoading(false)\r\n            }\r\n            else{ FoundContext.setLoading(false)}\r\n        } catch (error) {\r\n            FoundContext.setLoading(false)\r\n            setConnected(false)\r\n        }\r\n    }\r\n\r\n    function showLoadingScreen(){\r\n        return(\r\n        <View>\r\n            {StyleText(\"Connecting to Servers\",textType.PageTitle)}\r\n        </View>)\r\n\r\n    }\r\n\r\n    function switchPage(){\r\n        if(!isConnected){\r\n            if(FoundContext.loading){ \r\n                return (showLoadingScreen()  ) }\r\n            else{ return <NoConnectionScreen/> }\r\n        }\r\n        else if(!FoundContext.readUserProfile?.id){\r\n            if(FoundContext.loading){ \r\n                return (showLoadingScreen()  ) }\r\n            else{ return <SignInSwitcher/> }\r\n        }\r\n        else{ return <HomePage/>}\r\n    }\r\n    return(<>{switchPage()} </>)\r\n}","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { Alert, Modal, Pressable, StyleSheet, Text, View } from 'react-native';\r\nimport ConnectionSwitcher from './components/wrappers/wConnectionSwitcher';\r\nimport SuperProvider from './components/wrappers/wProviderWrapper';\r\n\r\nexport default function App() {\r\n  //===============================================\r\n  return (\r\n    <View style={{backgroundColor: '#444444', flex:1, alignItems:\"center\",justifyContent:\"center\" } }>\r\n      <StatusBar style=\"auto\" />\r\n      <SuperProvider>\r\n        <View style={{height:\"auto\", width:\"auto\", alignItems:\"center\",justifyContent:\"center\"}}>\r\n          < ConnectionSwitcher/>\r\n        </View>\r\n      </SuperProvider>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\"\r\n  }\r\n});"],"sourceRoot":""}